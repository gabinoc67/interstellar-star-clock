<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Warp Drive Solar Simulator</title>
  <style>
    body {
      background-color: black;
      color: white;
      font-family: 'Courier New', monospace;
      margin: 0;
      overflow: hidden;
    }
    canvas {
      display: block;
      margin: auto;
      background-color: #000;
    }
    #legend {
      position: absolute;
      top: 10px;
      left: 10px;
      background: rgba(0, 0, 0, 0.8);
      padding: 10px;
      border: 1px solid cyan;
      border-radius: 5px;
    }
  </style>
</head>
<body>
  <canvas id="solarCanvas" width="1000" height="1000"></canvas>
  <script>
    const canvas = document.getElementById("solarCanvas");
    const ctx = canvas.getContext("2d");
    const centerX = canvas.width / 2;
    const centerY = canvas.height / 2;

    const AU = 100; // Astronomical unit scaling factor (in pixels)

    const planets = [
      { name: "Mercury", radius: 0.39 * AU, angleDeg: 240, color: "gray" },
      { name: "Venus", radius: 0.72 * AU, angleDeg: 190, color: "orange" },
      { name: "Earth", radius: 1 * AU, angleDeg: 140, color: "blue" },
      { name: "Mars", radius: 1.52 * AU, angleDeg: 100, color: "red" },
      { name: "Jupiter", radius: 5.2 * AU, angleDeg: 45, color: "tan" },
      { name: "Saturn", radius: 9.58 * AU, angleDeg: 300, color: "gold" },
      { name: "Uranus", radius: 19.22 * AU, angleDeg: 230, color: "lightblue" },
      { name: "Neptune", radius: 30.05 * AU, angleDeg: 310, color: "blue" },
      { name: "Pluto", radius: 39.48 * AU, angleDeg: 160, color: "white" },
    ];

    function drawSun() {
      ctx.beginPath();
      ctx.arc(centerX, centerY, 12, 0, 2 * Math.PI);
      ctx.fillStyle = "yellow";
      ctx.fill();
      ctx.font = "bold 18px Courier New";
      ctx.fillStyle = "white";
      ctx.fillText("Sun", centerX - 20, centerY - 20);
    }

    function drawOrbits() {
      ctx.strokeStyle = "#444";
      ctx.lineWidth = 1;
      planets.forEach(p => {
        ctx.beginPath();
        ctx.arc(centerX, centerY, p.radius, 0, 2 * Math.PI);
        ctx.stroke();
        drawAUlabel(p.radius);
      });
    }

    function drawAUlabel(radius) {
      ctx.save();
      ctx.translate(centerX, centerY);
      ctx.rotate(-Math.PI / 2); // Rotate to 90 degrees
      ctx.fillStyle = "cyan";
      ctx.font = "10px Courier New";
      ctx.fillText((radius / AU).toFixed(2) + " AU", radius + 4, 0);
      ctx.restore();
    }

    function drawPlanets() {
      planets.forEach(p => {
        const angle = (p.angleDeg * Math.PI) / 180;
        const x = centerX + p.radius * Math.cos(angle);
        const y = centerY + p.radius * Math.sin(angle);
        ctx.beginPath();
        ctx.arc(x, y, 6, 0, 2 * Math.PI);
        ctx.fillStyle = p.color;
        ctx.fill();
        ctx.fillStyle = "white";
        ctx.font = "12px Courier New";
        ctx.fillText(p.name, x + 8, y);
      });
    }

    function drawScene() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      drawSun();
      drawOrbits();
      drawPlanets();
    }

    drawScene();
  </script>
</body>
</html>
